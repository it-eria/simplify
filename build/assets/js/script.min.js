$(function(){$(".prev-slide").click(function(){$(".our-news__slider").slick("slickPrev")}),$(".next-slide").click(function(){$(".our-news__slider").slick("slickNext")}),$(".our-news__slider").slick({dots:!1,infinite:!0,speed:800,arrows:!1,autoplay:!0,slidesToShow:2,slidesToScroll:1,responsive:[{breakpoint:992,settings:{slidesToShow:1,centerMode:!0,focusOnSelect:!0}}]});var e="",o="",s={dots:!1,arrows:!1,autoplay:!0,infinite:!0,speed:1e3,slidesToShow:15,centerMode:!1,focusOnSelect:!0,responsive:[{breakpoint:768,settings:{slidesToShow:4,centerMode:!1,focusOnSelect:!0}},{breakpoint:480,settings:{slidesToShow:1,centerMode:!0,focusOnSelect:!0}}]};function t(s,i){o=$('.our-works__slider *[data-slick-index="'+s+'"] .mask-container img').attr("data-name"),e=$('.our-works__slider *[data-slick-index="'+i+'"] .mask-container img').attr("data-name"),$(".next-work").text(e),$(".prev-work").text(o)}$(window).width()<768?$(".client-block__brands-block").hasClass("slick-slider")||$(".client-block__brands-block").slick(s):$(".client-block__brands-block").hasClass("slick-slider")&&$(".client-block__brands-block").slick("unslick"),$(".our-works-left-arrow").click(function(){$(".our-works__slider").slick("slickPrev")}),$(".our-works-right-arrow").click(function(){$(".our-works__slider").slick("slickNext")}),$(".our-works__slider").slick({dots:!1,infinite:!0,speed:800,arrows:!1,autoplay:!1,slidesToShow:1,slidesToScroll:1,responsive:[{breakpoint:992,settings:{slidesToShow:1,centerMode:!0,focusOnSelect:!0}}]}),t(-1,1),$(".our-works__slider").on("afterChange",function(s,i,e){t(+e-1,+e+1)})}),$(function(){$(".default-title").each(function(){var s=$(this).find("h2").text(),i=s[s.length-1];console.log(i),"?"==i?$(this).find("h2").append('<i class="dot dot--question"></i>'):"!"==i?$(this).find("h2").append('<i class="dot dot--attension"></i>'):"."==i?$(this).find("h2").append('<i class="dot dot--dot"></i>'):$(this).find("h2").append('<i class="dot"></i>')}),$(".who-we-are__global-block__default").each(function(){var s=$(this).find("h2").text(),i=s[s.length-1];console.log(i),"?"==i?$(this).find("h2").append('<i class="dot dot--question"></i>'):"!"==i?$(this).find("h2").append('<i class="dot dot--attension"></i>'):"."==i?$(this).find("h2").append('<i class="dot dot--dot"></i>'):$(this).find("h2").append('<i class="dot"></i>')})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
